// <auto-generated />
using System;
using DisneyApi.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DisneyApi.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DisneyApi.Entities.Genero", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Genero","dbo");
                });

            modelBuilder.Entity("DisneyApi.Entities.PeliculaSerie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("FechaDeCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("PeliculaSerie","dbo");
                });

            modelBuilder.Entity("DisneyApi.Entities.PeliculaSerieGenero", b =>
                {
                    b.Property<int>("FK_PeliculaSerieID")
                        .HasColumnType("int");

                    b.Property<int>("FK_GeneroID")
                        .HasColumnType("int");

                    b.HasKey("FK_PeliculaSerieID", "FK_GeneroID");

                    b.HasIndex("FK_GeneroID");

                    b.ToTable("PeliculaSerieGenero","dbo");
                });

            modelBuilder.Entity("DisneyApi.Entities.Personaje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Edad")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Historia")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Peso")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Persona","dbo");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Edad = "95",
                            Historia = "",
                            Imagen = "https://i.imgur.com/Zgi3edg.png",
                            Nombre = "Winnie the Pooh",
                            Peso = ""
                        },
                        new
                        {
                            ID = 2,
                            Edad = "45",
                            Historia = "",
                            Imagen = "https://i.imgur.com/RotLYaI.png",
                            Nombre = "Rayo McQueen",
                            Peso = ""
                        },
                        new
                        {
                            ID = 3,
                            Edad = "30",
                            Historia = "",
                            Imagen = "https://i.imgur.com/5M0XxkQ.jpg",
                            Nombre = "James P. Sullivan",
                            Peso = ""
                        },
                        new
                        {
                            ID = 4,
                            Edad = "10",
                            Historia = "",
                            Imagen = "https://i.imgur.com/slzDY8A.png",
                            Nombre = "Dory",
                            Peso = ""
                        },
                        new
                        {
                            ID = 5,
                            Edad = "18",
                            Historia = "",
                            Imagen = "https://i.imgur.com/t41xOG2.png",
                            Nombre = "Bolt",
                            Peso = ""
                        },
                        new
                        {
                            ID = 6,
                            Edad = "7",
                            Historia = "",
                            Imagen = "https://i.imgur.com/LPTOrA1.png",
                            Nombre = "Pumbaa",
                            Peso = ""
                        },
                        new
                        {
                            ID = 7,
                            Edad = "28",
                            Historia = "",
                            Imagen = "https://i.imgur.com/MyNomvq.png",
                            Nombre = "Mike Wazowski",
                            Peso = ""
                        });
                });

            modelBuilder.Entity("DisneyApi.Entities.PersonajePeliculaSerie", b =>
                {
                    b.Property<int>("FK_PersonajeID")
                        .HasColumnType("int");

                    b.Property<int>("FK_PeliculaSerieID")
                        .HasColumnType("int");

                    b.HasKey("FK_PersonajeID", "FK_PeliculaSerieID");

                    b.HasIndex("FK_PeliculaSerieID");

                    b.ToTable("PersonajePeliculaSerie","dbo");
                });

            modelBuilder.Entity("DisneyApi.Entities.PeliculaSerieGenero", b =>
                {
                    b.HasOne("DisneyApi.Entities.Genero", "Genero")
                        .WithMany("PeliculaSerieGenero")
                        .HasForeignKey("FK_GeneroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisneyApi.Entities.PeliculaSerie", "PeliculaSerie")
                        .WithMany("PeliculaSerieGenero")
                        .HasForeignKey("FK_PeliculaSerieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DisneyApi.Entities.PersonajePeliculaSerie", b =>
                {
                    b.HasOne("DisneyApi.Entities.PeliculaSerie", "PeliculaSerie")
                        .WithMany("PersonajePeliculaSerie")
                        .HasForeignKey("FK_PeliculaSerieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisneyApi.Entities.Personaje", "Personaje")
                        .WithMany("PersonajePeliculaSerie")
                        .HasForeignKey("FK_PersonajeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
